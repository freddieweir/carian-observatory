# =============================================================================
# SIMPLIFIED TEMPLATE-BASED .GITIGNORE FOR AI INFRASTRUCTURE PLATFORM
# =============================================================================
# Clean directory-level exclusions with templates/ directory for safe commits
#
# NEW STRUCTURE:
# - templates/ directory contains all .template files (safe to commit)
# - Generated files are directory-level gitignored (never committed)
# - Master script ./create-all-from-templates.sh generates everything

# =============================================================================
# CRITICAL SECURITY - SSL/TLS CERTIFICATES AND PRIVATE KEYS
# =============================================================================
# Never commit any cryptographic material
*.key
*.crt
*.pem
*.p12
*.pfx
*.cert
*.cer
*.der
*.ca-bundle
*.ca-crt

# Certificate directories
ssl_cert/
certs/
certificates/
ssl/
tls/

# Certificate backups (for safety)
ssl_cert_backup_*.tar.gz

# Certificate Signing Requests and related
*.csr
*.req

# =============================================================================
# CRITICAL SECURITY - AUTHENTICATION AND USER DATA
# =============================================================================
# Never commit user databases, auth data, or session information
**/users_database.yml
**/notification.txt
**/db.sqlite3
**/webui.db
**/chroma.sqlite3
*.sqlite
*.sqlite3
*.db

# Authentication backups and exports
auth_backup*
users_backup*
user_export*

# Session and auth state
session_*
auth_state*
token_cache*

# Task management directories
/tasks/

# =============================================================================
# NEW TEMPLATE SYSTEM - DIRECTORY-LEVEL EXCLUSIONS
# =============================================================================
# Environment files (use templates/.env.template instead)
.env
.env.*
!.env.template
!.env.example

# Generated service configurations (use templates/ instead)
services/*/configs/
services/*/configs/*
!services/*/configs/.gitkeep
!services/*/configs/*.template
!services/*/docker-compose.yml

# Generated monitoring configurations (use templates/ instead)
services/monitoring/alertmanager/alertmanager.yml
!services/monitoring/alertmanager/alertmanager.yml.template

# Generated scripts (use templates/ instead)
services/*/scripts/*
!services/*/scripts/.gitkeep
!services/monitoring/scripts/generate-config.sh

# Generated scripts directory (use templates/scripts/ instead)
scripts/*
!scripts/.gitkeep

# Exception: Allow specific script directories for service-specific scripts
!scripts/glance/
scripts/glance/*
!scripts/glance/*.template
!scripts/glance/create-scripts.sh

# Allow templates directory and all contents (SAFE TO COMMIT)
!templates/
!templates/**/*

# Allow master generation script
!create-all-from-templates.sh

# =============================================================================
# SECURITY - APPLICATION DATA AND RUNTIME FILES
# =============================================================================
# Application data directories
data/
canary-data/
runtime-data/
app-data/

# Cache directories
**/cache/
**/tmp_cache/
.cache/

# Upload directories
**/uploads/
**/files/
**/attachments/

# Vector databases and embeddings
**/vector_db/
**/embedding/
**/embeddings/
**/faiss_index/
**/chroma_db/

# Model storage
**/models/
**/model_cache/
**/huggingface_cache/
**/ollama_models/

# Speech and audio processing
**/speech/
**/whisper/
**/audio_cache/

# =============================================================================
# OPERATIONAL FILES
# =============================================================================
# Log files
**/logs/
*.log
*.log.*
access.log*
error.log*
auth.log*
migration-*.log

# Runtime and temporary
**/tmp/
**/temp/
**/runtime/
**/var/
**/run/

# Process IDs and lock files
*.pid
*.lock
.lockfile

# =============================================================================
# BACKUP AND STATE FILES
# =============================================================================
# Backup files (often contain sensitive data)
*.backup
*.backup-*
*.bak
*.orig
.backup-*
backup/

# Migration state and progress
.migration-state
.migration-config
.portfolio-migration-*

# Domain and certificate mapping
domain-mapping.txt
cert-mapping.json

# =============================================================================
# DEVELOPMENT AND EDITOR FILES
# =============================================================================
# macOS specific
.DS_Store
.AppleDouble
.LSOverride
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# IDE and editor files
.vscode/settings.json
.vscode/launch.json
.idea/
*.code-workspace
*.swp
*.swo
*~
.vim/
.emacs.d/

# Git auxiliary files
.gitignore.old
.gitignore.backup*

# =============================================================================
# LANGUAGE-SPECIFIC PATTERNS
# =============================================================================
# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity
.pnpm-debug.log*

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.pytest_cache/
.coverage
.coverage.*
htmlcov/
.tox/
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Virtual environments
.env/
.venv/
env/
venv/
ENV/
env.bak/
venv.bak/

# Ruby
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/
.bundle/
vendor/bundle
lib/bundler/man/

# Go
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out
go.work

# Rust
target/
Cargo.lock

# =============================================================================
# DOCKER AND CONTAINER RUNTIME
# =============================================================================
# Docker runtime files
.dockerignore.old
docker-compose.override.yml
docker-compose.override.yaml

# Container data volumes (often contain sensitive runtime data)
volumes/
docker-data/
container-data/

# =============================================================================
# PATTERN-BASED SECURITY EXCLUSIONS
# =============================================================================
# Any file that might contain passwords or secrets
*password*
*secret*
*private*
*key*
*token*
*credential*
*auth*

# But allow these common exceptions:
!README.md
!LICENSE
!CHANGELOG.md
!package.json
!Dockerfile*
!docker-compose*.yml
!Makefile
!scripts/
!docs/

# Allow template directory and all contents
!templates/
!templates/**/*

# Allow specific configuration templates
!templates/.env.template

# =============================================================================
# 1PASSWORD INTEGRATION SECURITY
# =============================================================================
# Temporary files from 1Password CLI operations
.env.backup.*
/tmp/.env.*
**/op-session-*
**/1password-temp-*
1password_template.json

# 1Password Connect Server credentials
1password-credentials.json
**/1password-credentials.json

# Processed environment files (contain real secrets)
.env.processed
.env.secrets
.env.injected

# =============================================================================
# PORTFOLIO-SPECIFIC EXCLUSIONS
# =============================================================================
# Personal information patterns (customize as needed)
*personal*

# Note: All scripts now excluded via scripts/* pattern above

# Private planning and notes (OPSEC)
todos/
/todos/

# Development guidance files (internal only)
CLAUDE.md
/CLAUDE.md

# Development and testing artifacts
test-results/
test-output/
.nyc_output/
coverage/

# Performance and profiling
*.prof
*.trace
*.mem

# =============================================================================
# SECURITY SCANNING AND COMPLIANCE
# =============================================================================
# Security scan results
security-scan-*.json
vulnerability-report-*.pdf
audit-report-*.html

# Compliance and audit files
compliance-*.json
audit-*.log
penetration-test-*.pdf

# =============================================================================
# DOCUMENTATION GENERATION
# =============================================================================
# Generated documentation (prefer source markdown)
docs/build/
site/
_site/
.jekyll-cache/
.sass-cache/

# =============================================================================
# FINAL SAFETY NET
# =============================================================================
# Catch any missed sensitive patterns
**/admin
**/private
**/secret
**/confidential
**/sensitive

# API keys and tokens (various formats)
*apikey*
*api_key*
*access_key*
*secret_key*
*client_secret*
*bearer_token*

# Database connection strings
*connection_string*
*database_url*
*db_url*

# Claude IDE settings (personal)
.claude/

# =============================================================================
# PROJECT MANAGEMENT AND DOCUMENTATION
# =============================================================================
# Task tracking and project documentation that may contain specific domains
tasks/
temporary-memory/

# =============================================================================
# TEMPLATE SYSTEM SUMMARY
# =============================================================================
# COMMIT TO GIT:
# - templates/ directory and all contents
# - README.md with generic yourdomain.com examples
# - docker-compose.yml files
# - create-all-from-templates.sh script
#
# NEVER COMMIT TO GIT:
# - Generated files in services/*/configs/ and services/*/scripts/
# - .env file with real secrets
# - Any file with real domain names or personal information
#
# WORKFLOW:
# 1. Edit templates in templates/ directory
# 2. Run ./create-all-from-templates.sh to generate working files
# 3. Only commit template changes to git
