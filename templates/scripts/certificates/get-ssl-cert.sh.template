#!/bin/bash
# SSL Certificate Retrieval from 1Password
# Retrieves SSL certificates from 1Password and saves them to local files

set -eo pipefail

VAULT="Nazarick API"
SSL_DIR="./ssl_cert"

usage() {
    echo "Usage: $0 <certificate-name> [output-directory]"
    echo ""
    echo "Examples:"
    echo "  $0 wildcard.yourdomain.com"
    echo "  $0 webui.yourdomain.com /tmp/certs"
    echo ""
    echo "Available certificates:"
    op item list --vault="$VAULT" | grep "SSL:" | awk '{print $2}' | sed 's/SSL:/  /'
}

if [[ $# -lt 1 ]]; then
    usage
    exit 1
fi

CERT_NAME="$1"
OUTPUT_DIR="${2:-$SSL_DIR}"

# Ensure output directory exists
mkdir -p "$OUTPUT_DIR"

echo "🔐 Retrieving SSL certificate: $CERT_NAME"

# Get certificate content from 1Password
if ! cert_data=$(op item get "SSL: $CERT_NAME" --vault="$VAULT" --fields notesPlain 2>/dev/null); then
    echo "❌ Certificate 'SSL: $CERT_NAME' not found in 1Password"
    exit 1
fi

# Remove quotes and extract certificate and key
cert_data=$(echo "$cert_data" | sed 's/^"//; s/"$//')

# Extract certificate
cert_content=$(echo "$cert_data" | sed -n '/^CERTIFICATE:/,/^PRIVATE KEY:/p' | sed '1d; $d')
key_content=$(echo "$cert_data" | sed -n '/^PRIVATE KEY:/,$p' | sed '1d')

# Save certificate files
cert_file="$OUTPUT_DIR/$CERT_NAME.crt"
key_file="$OUTPUT_DIR/$CERT_NAME.key"

echo "$cert_content" > "$cert_file"
echo "$key_content" > "$key_file"

# Set secure permissions
chmod 644 "$cert_file"
chmod 600 "$key_file"

echo "✅ Certificate retrieved successfully:"
echo "   📜 Certificate: $cert_file"
echo "   🔑 Private Key: $key_file"

# Show certificate details
echo ""
echo "📋 Certificate Details:"
openssl x509 -in "$cert_file" -text -noout | grep -A 2 "Subject:" | head -3