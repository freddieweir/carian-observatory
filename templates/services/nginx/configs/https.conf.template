# Production Nginx Configuration Template
# Variables will be substituted from environment at runtime

# Open-WebUI Canary HTTPS
server {
    listen 443 ssl;
    http2 on;
    server_name ${CANARY_DOMAIN};
    
    ssl_certificate /etc/ssl/custom/${CANARY_DOMAIN}.crt;
    ssl_certificate_key /etc/ssl/custom/${CANARY_DOMAIN}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    location /authelia {
        internal;
        proxy_pass http://host.docker.internal:9091/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }
    
    location / {
        auth_request /authelia;
        auth_request_set $user $upstream_http_remote_user;
        error_page 401 =302 https://${AUTH_DOMAIN}/?rd=$scheme://$http_host$request_uri;
        
        proxy_pass http://open-webui-canary:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Remote-User $user;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Open-WebUI HTTPS (Production) - DEFAULT SERVER
server {
    listen 443 ssl default_server;
    http2 on;
    server_name ${GENERIC_WEBUI_DOMAIN} ${WEBUI_DOMAIN};
    
    ssl_certificate /etc/ssl/custom/${WEBUI_DOMAIN}.crt;
    ssl_certificate_key /etc/ssl/custom/${WEBUI_DOMAIN}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    location /authelia {
        internal;
        proxy_pass http://host.docker.internal:9091/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }
    
    location / {
        auth_request /authelia;
        auth_request_set $user $upstream_http_remote_user;
        error_page 401 =302 https://${AUTH_DOMAIN}/?rd=$scheme://$http_host$request_uri;
        
        proxy_pass http://open-webui:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Remote-User $user;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Perplexica HTTPS with Authentication
server {
    listen 443 ssl;
    http2 on;
    server_name ${GENERIC_PERPLEXICA_DOMAIN} ${PERPLEXICA_DOMAIN};
    
    ssl_certificate /etc/ssl/custom/${PERPLEXICA_DOMAIN}.crt;
    ssl_certificate_key /etc/ssl/custom/${PERPLEXICA_DOMAIN}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    location /authelia {
        internal;
        proxy_pass http://host.docker.internal:9091/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }
    
    location / {
        auth_request /authelia;
        auth_request_set $user $upstream_http_remote_user;
        error_page 401 =302 https://${AUTH_DOMAIN}/?rd=$scheme://$http_host$request_uri;
        
        proxy_set_header Remote-User $user;
        proxy_pass http://perplexica:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Homepage HTTPS with Authentication
server {
    listen 443 ssl;
    http2 on;
    server_name ${GENERIC_HOMEPAGE_DOMAIN} ${HOMEPAGE_DOMAIN};
    
    ssl_certificate /etc/ssl/custom/${HOMEPAGE_DOMAIN}.crt;
    ssl_certificate_key /etc/ssl/custom/${HOMEPAGE_DOMAIN}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    location /authelia {
        internal;
        proxy_pass http://host.docker.internal:9091/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }
    
    location / {
        auth_request /authelia;
        auth_request_set $user $upstream_http_remote_user;
        error_page 401 =302 https://${AUTH_DOMAIN}/?rd=$scheme://$http_host$request_uri;
        
        proxy_pass http://homepage:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Remote-User $user;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Authelia Portal
server {
    listen 443 ssl;
    http2 on;
    server_name ${GENERIC_AUTH_DOMAIN} ${AUTH_DOMAIN};
    
    ssl_certificate /etc/ssl/custom/${AUTH_DOMAIN}.crt;
    ssl_certificate_key /etc/ssl/custom/${AUTH_DOMAIN}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    location / {
        proxy_pass http://host.docker.internal:9091;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Glance Dashboard HTTPS
server {
    listen 443 ssl;
    http2 on;
    server_name ${GENERIC_GLANCE_DOMAIN} ${GLANCE_DOMAIN};

    ssl_certificate /etc/ssl/custom/${GLANCE_DOMAIN}.crt;
    ssl_certificate_key /etc/ssl/custom/${GLANCE_DOMAIN}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN always;  # Allow iframe for Homepage embedding
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    location /authelia {
        internal;
        proxy_pass http://host.docker.internal:9091/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }

    location / {
        auth_request /authelia;
        auth_request_set $user $upstream_http_remote_user;
        error_page 401 =302 https://${AUTH_DOMAIN}/?rd=$scheme://$http_host$request_uri;

        proxy_pass http://co-glance-service:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Remote-User $user;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name ${GENERIC_WEBUI_DOMAIN} ${GENERIC_PERPLEXICA_DOMAIN} ${GENERIC_AUTH_DOMAIN} ${GENERIC_HOMEPAGE_DOMAIN} ${GENERIC_GLANCE_DOMAIN};
    return 301 https://$server_name$request_uri;
}

# Fallback server for IP access
server {
    listen 80 default_server;
    server_name _;
    
    location / {
        proxy_pass http://open-webui:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    location /perplexica/ {
        proxy_pass http://perplexica:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}