# Open-WebUI Canary Service
# For testing latest versions - separate from production

services:
  open-webui-canary:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: co-open-webui-canary
    restart: unless-stopped
    volumes:
      # Separate canary data volume (still used for uploads, etc.)
      - ./data/canary:/app/backend/data
    ports:
      - "8081:8080"  # Different port for direct access
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY:-}
      - ENABLE_OPENROUTER_API=${ENABLE_OPENROUTER_API:-true}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      - OPENROUTER_API_BASE_URL=${OPENROUTER_API_BASE_URL:-https://openrouter.ai/api/v1}
      - SCARF_NO_ANALYTICS=true
      - DO_NOT_TRACK=true
      - ANONYMIZED_TELEMETRY=false
      # PostgreSQL Integration
      - DATABASE_URL=${DATABASE_URL}
      - VECTOR_DB=${VECTOR_DB:-pgvector}
      - PGVECTOR_MAX_VECTOR_LENGTH=${PGVECTOR_MAX_VECTOR_LENGTH:-1536}
      - PGVECTOR_AUTO_CREATE_EXTENSION=${PGVECTOR_AUTO_CREATE_EXTENSION:-false}
      # Memory feature enhancement
      - ENABLE_MEMORY_FEATURE=true
      - MEMORY_AUTO_CLEANUP=false
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
    depends_on:
      - postgresql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.centurylinklabs.watchtower.scope=canary"

  # PostgreSQL service for canary testing
  postgresql:
    image: pgvector/pgvector:pg18
    container_name: co-postgresql-service
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: UTC
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ../postgresql/init:/docker-entrypoint-initdb.d:ro
      - ../postgresql/configs/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgresql-data:
    name: ${COMPOSE_PROJECT_NAME}_postgresql-data

networks:
  app-network:
    name: ${COMPOSE_PROJECT_NAME}_app-network