#!/bin/bash
# Generate Homepage configuration from templates using environment variables
# Template version - uses yourdomain.com placeholders

set -e

# Source environment variables (safely, ignoring 1Password template lines)
ENV_FILE="../../../.env"
if [ -f "$ENV_FILE" ]; then
    set -a  # automatically export all variables
    # Filter out 1Password template lines before sourcing
    grep -v "op://" "$ENV_FILE" | while IFS= read -r line; do
        if [[ "$line" =~ ^[A-Z_]+= ]]; then
            export "$line"
        fi
    done
    # Manually export the domain variables we need
    export PRIMARY_DOMAIN=yourdomain.com
    export WEBUI_SUBDOMAIN=webui
    export PERPLEXICA_SUBDOMAIN=perplexica
    export AUTH_SUBDOMAIN=auth
    export CANARY_SUBDOMAIN=webui-canary
    export WEBUI_DOMAIN="${WEBUI_SUBDOMAIN}.${PRIMARY_DOMAIN}"
    export CANARY_DOMAIN="${CANARY_SUBDOMAIN}.${PRIMARY_DOMAIN}"
    export PERPLEXICA_DOMAIN="${PERPLEXICA_SUBDOMAIN}.${PRIMARY_DOMAIN}"
    export AUTH_DOMAIN="${AUTH_SUBDOMAIN}.${PRIMARY_DOMAIN}"
    set +a
else
    echo "Error: .env file not found at $ENV_FILE"
    exit 1
fi

# Generate services.yaml from template
echo "Generating services.yaml from template..."
envsubst < "../configs/services.yaml.template" > "../configs/services.yaml"

echo "Configuration generated successfully!"
echo "Services will use:"
echo "  - WebUI: https://${WEBUI_DOMAIN}"
echo "  - Canary: https://${CANARY_DOMAIN}"
echo "  - Perplexica: https://${PERPLEXICA_DOMAIN}"
echo "  - Auth: https://${AUTH_DOMAIN}"